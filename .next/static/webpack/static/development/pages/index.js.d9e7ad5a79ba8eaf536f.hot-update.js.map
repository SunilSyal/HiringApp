{"version":3,"file":"static/webpack/static/development/pages/index.js.d9e7ad5a79ba8eaf536f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from \"../components/MyLayout.js\";\nimport { withRouter } from \"next/router\";\nimport { Table, FormGroup, Label, Input } from \"reactstrap\";\nimport fetch from \"isomorphic-unfetch\";\nimport CandidateRow from \"../components/candidate-row\";\n\nclass Candidates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props };\n\n    this.getPosts = this.getPosts.bind(this);\n    this.filterRecords = this.filterRecords.bind(this);\n    this.fetchRecords = this.fetchRecords.bind(this);\n  }\n\n  getPosts() {\n    return this.state.data;\n  }\n\n  filterRecords(event) {\n    var str = event.target.value;\n    this.setState({ filter: str });\n    this.fetchRecords(str);\n  }\n\n  static async getInitialProps({ req }) {\n    const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\n    const params = {\n      allRecords: true\n    };\n    const res = await fetch(baseUrl + \"/api/pipeline\", {\n      method: \"post\",\n      body: JSON.stringify(params),\n      headers: { \"Content-type\": \"application/json\" }\n    });\n    var data = await res.json();\n    data.req = req;\n    return { data };\n  }\n\n  async fetchRecords(str) {\n    const baseUrl = this.state.req\n      ? `${this.state.req.protocol}://${this.state.req.get(\"Host\")}`\n      : \"\";\n    const params = {\n      query: str\n    };\n    const res = await fetch(baseUrl + \"/api/pipeline\", {\n      method: \"post\",\n      body: JSON.stringify(params),\n      headers: { \"Content-type\": \"application/json\" }\n    });\n\n    var temp = await res.json();\n    this.setState({ data: temp });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h1>Scheduled Candidates</h1>\n        <FormGroup className=\"col-xs-12 col-sm-6 row\">\n          <Label for=\"filter\" className=\"sr-only\">\n            Filter\n          </Label>\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            id=\"filter\"\n            placeholder=\"Enter a search string\"\n            value={this.props.filter}\n            onChange={this.filterRecords}\n          />\n        </FormGroup>\n        <h2 className={!this.state.data.length ? \"d-block\" : \"d-none\"}>\n          No record found for <b>{this.state.filter}</b>\n        </h2>\n        <Table\n          size=\"sm\"\n          className={this.state.data.length ? \"table\" : \"d-none\"}\n        >\n          <tbody>\n            <tr>\n              <th className=\"align-top\" scope=\"row\">\n                ID\n              </th>\n              <td className=\"align-top\">\n                <p color=\"link\">Candidate Name</p>\n              </td>\n              <td className=\"align-top\">\n                <p color=\"link\">Panel Name</p>\n              </td>\n              <td className=\"align-top\">\n                <p color=\"link\">Date</p>\n              </td>\n              <td className=\"align-top\">\n                <p color=\"link\">Interviewed for</p>\n              </td>\n              <td className=\"align-top\">\n                <p color=\"link\">Framework</p>\n              </td>\n              <td className=\"align-top\">\n                <p color=\"link\">Status</p>\n              </td>\n              <td className=\"align-top\">\n                <p color=\"link\">Edit</p>\n              </td>\n            </tr>\n\n            {this.getPosts().map((post, index) => (\n              <CandidateRow key={post._id} post={post} index={index} />\n            ))}\n          </tbody>\n        </Table>\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(Candidates);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AANA;AAOA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAiBA;;;;;;AACA;AAGA;AACA;AADA;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AACA;;AADA;;AAMA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAIA;AACA;AAFA;AAMA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AADA;AAOA;;;;;;;;;;;;AA3FA;AACA;AACA;AACA;AADA;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AACA;;AADA;;AAKA;AACA;;AADA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAjCA;AACA;AAiHA;;;;A","sourceRoot":""}